{"version":3,"sources":["webpack://tumblr/webpack/universalModuleDefinition","webpack://tumblr/webpack/bootstrap","webpack://tumblr/./src/scripts sync ^.*$","webpack://tumblr/./src/scripts/index.js","webpack://tumblr/./src/scripts/styles.js","webpack://tumblr/./src/scripts/templates/pages/home.js","webpack://tumblr/./src/scripts/templates/pages/post.js","webpack://tumblr/./src/scripts/templates/pages/tagged.js","webpack://tumblr/./src/scripts/templates/posts/audio.js","webpack://tumblr/./src/scripts/templates/posts/chat.js","webpack://tumblr/./src/scripts/templates/posts/link.js","webpack://tumblr/./src/scripts/templates/posts/photo.js","webpack://tumblr/./src/scripts/templates/posts/quote.js","webpack://tumblr/./src/scripts/templates/posts/text.js","webpack://tumblr/./src/scripts/templates/posts/video.js","webpack://tumblr/./src/scripts/tumblr.js","webpack://tumblr/./src/scripts/utils.js","webpack://tumblr/./src/styles/base.css","webpack://tumblr/./src/styles/components/card.css","webpack://tumblr/./src/styles/components/tags.css","webpack://tumblr/./src/styles/reset.css","webpack://tumblr/./src/styles/types/chat.css","webpack://tumblr/./src/styles/types/link.css","webpack://tumblr/./src/styles/types/photo.css","webpack://tumblr/./src/styles/types/quote.css"],"names":["TemplateHome","templates","tags","posts","map","tag","join","post","type","TemplatePost","relatedPosts","length","TemplateTagged","TemplateAudio","datas","id_string","player","summary","TemplateChat","title","dialogue","line","label","phrase","TemplateLink","url","description","TemplatePhoto","isPhotoset","photos","toLowerCase","photo","original_size","TemplateQuote","text","source","TemplateText","body","TemplateVideo","embed_code","Tumblr","constructor","options","getAllDatas","jsonComplete","getAllTags","totalPages","Math","ceil","totalPosts","elementsPerPage","addEvents","getTemplates","currentRoute","getRoute","hashChanged","e","currentTag","getHashTag","currentPostId","getHashPostId","pageType","getPageType","getDatasForTaggedPage","buildPage","pages","tagged","getDatasForPostPage","setRoute","getRelatedPosts","postId","limit","getDatasForHomePage","home","endPage","currentPage","isLoading","getScrollTop","document","clientHeight","window","innerHeight","nearBottom","loadNewPage","getPostsByPageNumber","element","querySelector","insertAdjacentHTML","getTemplatesByType","keys","keysTemplatesPage","path","custom","templatesPages","keysTemplatePosts","templatesPosts","customTemplates","filter","name","hasProperty","forEach","defaultTemplates","requestsDefaultTemplates","responses","Promise","all","response","index","default","cache","getDataFromCache","cacheMethod","getItem","browserStorageKey","getDataFromAPI","setItem","JSON","stringify","parse","removeItem","datasFirstRequest","requestAPI","getAPIUrl","isValidResponse","total_posts","nbLoop","getNumberOfRequest","requests","i","push","offset","nbPostPerRequest","then","concat","id","pageNumber","range","getRange","extractDatasFromLocalDatas","start","userOptions","defaultOptions","host","apiKey","limitData","Object","assign","onScroll","bind","addEventListener","html","innerHTML","route","location","hash","fetch","json","meta","status","slice","end","maxPosts","indexOf","previousPage","split","substr","ignoreTags","tagsSource","includes","some","randomKeys","getRandoms","key","flatMap","elem","pos","arr","sort","objectSource","prototype","hasOwnProperty","call","pageYOffset","documentElement","scrollTop","numPicks","min","max","len","nums","Array","selections","j","floor","random","splice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wD;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;;;;;;;;AAQA;AACe,SAASA,YAAT,CAAuB;AAAEC,WAAF;AAAaC,MAAb;AAAmBC;AAAnB,CAAvB,EAAmD;AACjE,SAAQ;;;;;;;;;;;kBAWSD,IAAI,CAACE,GAAL,CAASC,GAAG,IAAK;;4CAESA,GAAI,aAAYA,GAAI,MAAKA,GAAI;;iBAFvD,EAICC,IAJD,CAIM,EAJ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","file":"tumblr.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tumblr\"] = factory();\n\telse\n\t\troot[\"tumblr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/scripts/index.js\");\n","var map = {\n\t\".\": \"./src/scripts/index.js\",\n\t\"./\": \"./src/scripts/index.js\",\n\t\"./index\": \"./src/scripts/index.js\",\n\t\"./index.js\": \"./src/scripts/index.js\",\n\t\"./styles\": \"./src/scripts/styles.js\",\n\t\"./styles.js\": \"./src/scripts/styles.js\",\n\t\"./templates/pages/home\": \"./src/scripts/templates/pages/home.js\",\n\t\"./templates/pages/home.js\": \"./src/scripts/templates/pages/home.js\",\n\t\"./templates/pages/post\": \"./src/scripts/templates/pages/post.js\",\n\t\"./templates/pages/post.js\": \"./src/scripts/templates/pages/post.js\",\n\t\"./templates/pages/tagged\": \"./src/scripts/templates/pages/tagged.js\",\n\t\"./templates/pages/tagged.js\": \"./src/scripts/templates/pages/tagged.js\",\n\t\"./templates/posts/audio\": \"./src/scripts/templates/posts/audio.js\",\n\t\"./templates/posts/audio.js\": \"./src/scripts/templates/posts/audio.js\",\n\t\"./templates/posts/chat\": \"./src/scripts/templates/posts/chat.js\",\n\t\"./templates/posts/chat.js\": \"./src/scripts/templates/posts/chat.js\",\n\t\"./templates/posts/link\": \"./src/scripts/templates/posts/link.js\",\n\t\"./templates/posts/link.js\": \"./src/scripts/templates/posts/link.js\",\n\t\"./templates/posts/photo\": \"./src/scripts/templates/posts/photo.js\",\n\t\"./templates/posts/photo.js\": \"./src/scripts/templates/posts/photo.js\",\n\t\"./templates/posts/quote\": \"./src/scripts/templates/posts/quote.js\",\n\t\"./templates/posts/quote.js\": \"./src/scripts/templates/posts/quote.js\",\n\t\"./templates/posts/text\": \"./src/scripts/templates/posts/text.js\",\n\t\"./templates/posts/text.js\": \"./src/scripts/templates/posts/text.js\",\n\t\"./templates/posts/video\": \"./src/scripts/templates/posts/video.js\",\n\t\"./templates/posts/video.js\": \"./src/scripts/templates/posts/video.js\",\n\t\"./tumblr\": \"./src/scripts/tumblr.js\",\n\t\"./tumblr.js\": \"./src/scripts/tumblr.js\",\n\t\"./utils\": \"./src/scripts/utils.js\",\n\t\"./utils.js\": \"./src/scripts/utils.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/scripts sync recursive ^.*$\";","export { default } from './tumblr'\n","import '../styles/reset.css'\nimport '../styles/base.css'\n\nimport '../styles/components/tags.css'\nimport '../styles/components/card.css'\n\nimport '../styles/types/photo.css'\nimport '../styles/types/quote.css'\nimport '../styles/types/chat.css'\nimport '../styles/types/link.css'\n","/**\n * Template for audio Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplateHome ({ templates, tags, posts }) {\n\treturn `\n        <nav class=\"nav\">\n                <ul>\n                    <li>\n                        <a class=\"btn\" href=\"#_\" title=\"Home\">Home</a>\n                    </li>\n                </ul>\n            </ul>\n        </nav>\n        <div class=\"tags card\">\n            <ul class=\"card-body\">\n                ${tags.map(tag => `\n                    <li>\n                        <a href=\"#/tagged/${tag}\" title=\"#${tag}\">#${tag}</a>\n                    </li>\n                `).join('')}\n                <li></li>\n            </ul>\n        </div>\n        <div class=\"posts\" data-infinite-scroll>\n            ${posts.map(post => templates[post.type](post)).join('')}\n        </div>\n    `\n}\n","/**\n * Template for audio Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplatePost ({ templates, posts, relatedPosts }) {\n\treturn `\n        <nav class=\"nav\">\n                <ul>\n                    <li>\n                        <a class=\"btn\" href=\"#_\" title=\"Home\">Home</a>\n                    </li>\n                </ul>\n            </ul>\n        </nav>\n        <div class=\"posts\">\n            ${posts.map(post => templates[post.type](post)).join('')}\n        </div>\n        ${relatedPosts.length ? `\n            <div class=\"relatedPosts\">\n                <h5 class=\"relatedPosts-title\">Related posts</h5>\n                ${relatedPosts.map(post => templates[post.type](post)).join('')}\n            </div>\n        ` : ''}\n    `\n}\n","/**\n * Template for audio Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplateTagged ({ templates, tags, posts }) {\n\treturn `\n        <nav class=\"nav\">\n                <ul>\n                    <li>\n                        <a class=\"btn\" href=\"#_\" title=\"Home\">Home</a>\n                    </li>\n                </ul>\n            </ul>\n        </nav>\n        <div class=\"posts\">\n            ${posts.map(post => templates[post.type](post)).join('')}\n        </div>\n    `\n}\n","/**\n * Template for audio Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplateAudio (datas) {\n\treturn `\n        <div class=\"card card-audio\" data-id=\"${datas.id_string}\">\n            <div class=\"card-iframe\">\n                ${datas.player}\n            </div>\n            <div class=\"card-body\">\n                <a href=\"#/post/${datas.id_string}\" class=\"card-title\">${datas.summary}</a>\n                <ul class=\"card-tags\">\n                    ${datas.tags.map(tag => `\n                            <li>\n                                <a href=\"#/tagged/${tag}\" title=\"#${tag}\">#${tag}</a>\n                            </li>\n                    `).join('')}\n                </ul>\n            </div>\n        </div>\n    `\n}\n","/**\n * Template for chat Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplateChat (datas) {\n\treturn `\n        <div class=\"card card-chat\" data-id=\"${datas.id_string}\">\n            <div class=\"card-body\">\n                <a href=\"#/post/${datas.id_string}\" class=\"card-title\">${datas.title}</a>\n                <ul class=\"card-conversations\">\n                    ${datas.dialogue.map(line => `\n                            <li>\n                                <strong>${line.label}</strong>&nbsp;&nbsp;\n                                ${line.phrase}\n                            </li>\n                    `).join('')}\n                </ul>\n                <ul class=\"card-tags\">\n                    ${datas.tags.map(tag => `\n                            <li>\n                                <a href=\"#/tagged/${tag}\" title=\"#${tag}\">#${tag}</a>\n                            </li>\n                    `).join('')}\n                </ul>\n            </div>\n        </div>\n    `\n}\n","/**\n * Template for link Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplateLink (datas) {\n\treturn `\n        <div class=\"card card-link\" data-id=\"${datas.id_string}\">\n            <div class=\"card-body\">\n                <a href=\"${datas.url}\" class=\"card-linkItem\" title=\"${datas.title}\">${datas.title}</a>\n                ${datas.description}\n                <ul class=\"card-tags\">\n                    ${datas.tags.map(tag => `\n                            <li>\n                                <a href=\"#/tagged/${tag}\" title=\"#${tag}\">#${tag}</a>\n                            </li>\n                    `).join('')}\n                </ul>\n            </div>\n        </div>\n    `\n}\n","/**\n * Template for photo/photoset Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplatePhoto (datas) {\n\tconst isPhotoset = datas.photos.length > 1\n\treturn `\n        <div class=\"card card-photo${isPhotoset ? ` photoset photos-${datas.photos.length}` : ''}\" data-id=\"${datas.id_string}\" data-tags=\"${datas.tags.join(',').toLowerCase()}\">\n            <div class=\"card-body\">\n                <ul class=\"card-photos\">\n                ${datas.photos.map(photo => `\n                        <li>\n                            <img class=\"card-picture\" src=\"${photo.original_size.url}\" alt=\"${datas.summary}\" />\n                        </li>\n                `).join('')}\n                </ul>\n                ${datas.summary\n                ? `<a href=\"#/post/${datas.id_string}\" class=\"card-title\">${datas.summary}</a>`\n                : ''}\n                <ul class=\"card-tags\">\n                    ${datas.tags.map(tag => `\n                            <li>\n                                <a href=\"#/tagged/${tag}\" title=\"#${tag}\">#${tag}</a>\n                            </li>\n                    `).join('')}\n                </ul>\n            </div>\n        </div>\n    `\n}\n","/**\n * Template for quote Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplateQuote (datas) {\n\treturn `\n        <div class=\"card card-quote\" data-id=\"${datas.id_string}\">\n            <div class=\"card-body\">\n                <blockquote class=\"card-blockquote\">\n                    <p>${datas.text}</p>\n                    <footer class=\"blockquote-footer\">${datas.source}</footer>\n                </blockquote>\n                <ul class=\"card-tags\">\n                    ${datas.tags.map(tag => `\n                            <li>\n                                <a href=\"#/tagged/${tag}\" title=\"#${tag}\">#${tag}</a>\n                            </li>\n                    `).join('')}\n                </ul>\n            </div>\n        </div>\n    `\n}\n","/**\n * Template for text Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplateText (datas) {\n\treturn `\n        <div class=\"card card-text\" data-id=\"${datas.id_string}\">\n            <div class=\"card-body\">\n                <a href=\"#/post/${datas.id_string}\" class=\"card-title\">${datas.title}</a>\n                ${datas.body}\n                <ul class=\"card-tags\">\n                    ${datas.tags.map(tag => `\n                            <li>\n                                <a href=\"#/tagged/${tag}\" title=\"#${tag}\">#${tag}</a>\n                            </li>\n                    `).join('')}\n                </ul>\n            </div>\n        </div>\n    `\n}\n","/**\n * Template for video Tumblr post type\n *\n * @param {Object} datas Datas for the post\n *\n * @returns {String} HTML string for the template\n */\n\n/* prettier-ignore */\nexport default function TemplateVideo (datas) {\n\treturn `\n        <div class=\"card card-video\" data-id=\"${datas.id_string}\" data-tags=\"${datas.tags.join(',').toLowerCase()}\">\n            <div class=\"card-iframe\">\n                ${datas.player[2].embed_code}\n            </div>\n            <div class=\"card-body\">\n                <a href=\"#/post/${datas.id_string}\" class=\"card-title\">${datas.summary}</a>\n                <ul class=\"card-tags\">\n                    ${datas.tags.map(tag => `\n                            <li>\n                                <a href=\"#/tagged/${tag}\" title=\"#${tag}\">#${tag}</a>\n                            </li>\n                    `).join('')}\n                </ul>\n            </div>\n        </div>\n    `\n}\n","// import TemplateNav from './templates/components/template-nav'\n// import TemplateTags from './templates/components/template-tags'\n// import TemplatePageHome from './templates/pages/home'\n// import TemplateRelatedPosts from './templates/components/template-related-posts'\nimport { getScrollTop, getRandoms } from './utils'\n\nimport './styles'\n\n/**\n * @license MIT\n * @name Tumblrjs\n * @version 2.0.0\n * @author: Yoriiis aka Joris DANIEL <joris.daniel@gmail.com>\n * @description:\n * {@link https://github.com/yoriiis/tumblr}\n * @copyright 2020 Joris DANIEL\n **/\nexport default class Tumblr {\n\t/**\n\t * @param {options}\n\t */\n\tconstructor (options) {\n\t\tconst userOptions = options || {}\n\t\tconst defaultOptions = {\n\t\t\telement: null,\n\t\t\thost: '',\n\t\t\tapiKey: '',\n\t\t\tlimitData: 250,\n\t\t\tcache: false,\n\t\t\tcacheMethod: 'sessionStorage',\n\t\t\tnearBottom: 350,\n\t\t\telementsPerPage: 20,\n\t\t\ttemplatesPages: {},\n\t\t\ttemplatesPosts: {}\n\t\t}\n\n\t\t// Merge default options with user options\n\t\tthis.options = Object.assign(defaultOptions, userOptions)\n\n\t\t// No configurables params\n\t\tthis.browserStorageKey = 'TumblrJsonData'\n\t\tthis.endPage = false\n\t\tthis.isLoading = false\n\t\tthis.jsonComplete = false\n\t\tthis.currentPage = 1\n\t\tthis.nbPostPerRequest = 50\n\t\tthis.datas = {}\n\n\t\tthis.keysTemplatesPage = ['home', 'post', 'tagged']\n\t\tthis.keysTemplatePosts = ['audio', 'chat', 'link', 'photo', 'quote', 'text', 'video']\n\n\t\tthis.onScroll = this.onScroll.bind(this)\n\t\tthis.hashChanged = this.hashChanged.bind(this)\n\t}\n\n\t/**\n\t * Function to initialize the app\n\t */\n\tinit = async () => {\n\t\t// Get JSON and push it in cache if option is active and if it's possible\n\t\tthis.datas = await this.getAllDatas()\n\n\t\tif (this.datas.posts.length === 0) {\n\t\t\treturn false\n\t\t}\n\t\tthis.jsonComplete = true\n\t\tthis.datas.tags = await this.getAllTags()\n\t\tthis.totalPages = Math.ceil(this.datas.totalPosts / this.options.elementsPerPage)\n\n\t\tthis.addEvents()\n\t\tthis.templates = await this.getTemplates()\n\n\t\t// Get current route\n\t\tthis.currentRoute = this.getRoute()\n\n\t\tthis.hashChanged()\n\n\t\treturn this.datas\n\t}\n\n\t/**\n\t * Create event listeners\n\t */\n\taddEvents () {\n\t\twindow.addEventListener('scroll', this.onScroll, false)\n\t\twindow.addEventListener('hashchange', this.hashChanged, false)\n\t}\n\n\t/**\n\t * On hash changed event listener\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\thashChanged = async e => {\n\t\tconst currentTag = this.getHashTag()\n\t\tconst currentPostId = this.getHashPostId()\n\t\tconst pageType = this.getPageType()\n\t\tlet posts\n\n\t\tif (pageType === 'tagged' && currentTag) {\n\t\t\tposts = await this.getDatasForTaggedPage(currentTag)\n\t\t\tthis.buildPage(\n\t\t\t\tthis.templates.pages.tagged({\n\t\t\t\t\ttemplates: this.templates.posts,\n\t\t\t\t\tposts\n\t\t\t\t})\n\t\t\t)\n\t\t} else if (pageType === 'post' && currentPostId) {\n\t\t\tposts = await this.getDatasForPostPage(currentPostId)\n\t\t\tif (posts.length > 1) {\n\t\t\t\tthis.setRoute('')\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst relatedPosts = this.getRelatedPosts({\n\t\t\t\tpostId: currentPostId,\n\t\t\t\ttags: posts[0].tags,\n\t\t\t\tlimit: 3\n\t\t\t})\n\t\t\tthis.buildPage(\n\t\t\t\tthis.templates.pages.post({\n\t\t\t\t\ttemplates: this.templates.posts,\n\t\t\t\t\tposts,\n\t\t\t\t\trelatedPosts\n\t\t\t\t})\n\t\t\t)\n\t\t} else {\n\t\t\tposts = await this.getDatasForHomePage()\n\t\t\tthis.buildPage(\n\t\t\t\tthis.templates.pages.home({\n\t\t\t\t\ttemplates: this.templates.posts,\n\t\t\t\t\ttags: this.datas.tags,\n\t\t\t\t\tposts\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\n\t\t// Reset class properties on page changes\n\t\tthis.endPage = false\n\t\tthis.currentPage = 1\n\t}\n\n\t/**\n\t * On scroll event listener\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\tonScroll = async e => {\n\t\tif (!this.isLoading && !this.endPage && this.getPageType() === 'home') {\n\t\t\tif (\n\t\t\t\tgetScrollTop() >=\n\t\t\t\tdocument.body.clientHeight - window.innerHeight - this.options.nearBottom\n\t\t\t) {\n\t\t\t\tthis.isLoading = true\n\t\t\t\tif (this.currentPage >= this.totalPages) {\n\t\t\t\t\tthis.endPage = true\n\t\t\t\t} else {\n\t\t\t\t\tawait this.loadNewPage()\n\t\t\t\t\tthis.currentPage++\n\t\t\t\t}\n\t\t\t\tthis.isLoading = false\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Build the page\n\t *\n\t * @param {Array} posts List of posts for the current page\n\t * @param {Array} relatedPosts List of related posts if available\n\t */\n\tbuildPage (html) {\n\t\tthis.options.element.innerHTML = html\n\t}\n\n\t/**\n\t * Load new page on infinite scroll\n\t * Get next posts from the API\n\t * Inject new content after current posts\n\t */\n\tloadNewPage = async () => {\n\t\tconst posts = await this.getPostsByPageNumber(this.currentPage + 1)\n\t\tthis.options.element\n\t\t\t.querySelector('[data-infinite-scroll]')\n\t\t\t.insertAdjacentHTML(\n\t\t\t\t'beforeend',\n\t\t\t\t`${posts.map(post => this.templates.posts[post.type](post)).join('')}`\n\t\t\t)\n\t}\n\n\t/**\n\t * Set the route\n\t *\n\t * @param {String} route New value for the route\n\t */\n\tsetRoute (route) {\n\t\twindow.location.hash = route\n\t}\n\n\t/**\n\t * Request datas from the API\n\t *\n\t * @param {String} url API url\n\t *\n\t * @returns {Promise<Object>} Promise results from the API\n\t */\n\trequestAPI (url) {\n\t\treturn fetch(url).then(response => response.json())\n\t}\n\n\t/**\n\t * Check if the Response from the API is valid\n\t *\n\t * @param {Object} datas Response datas\n\t *\n\t * @returns {Boolean} Is a valid Response\n\t */\n\tisValidResponse (datas) {\n\t\treturn datas.meta.status === 200\n\t}\n\n\t/**\n\t * Extract a range of posts from browser storage if available\n\t *\n\t * @param {Object} range Start and end index for the range\n\t *\n\t * @returns {Array} List of corresponding posts\n\t */\n\textractDatasFromLocalDatas (range) {\n\t\treturn this.datas.posts.slice(range.start, range.end + 1)\n\t}\n\n\t/**\n\t * Get templates from constructor options if available (options.templates[type])\n\t * Else, dynamic import default template\n\t *\n\t * @returns {Object} List of template functions by type\n\t */\n\tgetTemplates = async () => {\n\t\treturn {\n\t\t\tpages: await this.getTemplatesByType({\n\t\t\t\tkeys: this.keysTemplatesPage,\n\t\t\t\tpath: './templates/pages/',\n\t\t\t\tcustom: this.options.templatesPages\n\t\t\t}),\n\t\t\tposts: await this.getTemplatesByType({\n\t\t\t\tkeys: this.keysTemplatePosts,\n\t\t\t\tpath: './templates/posts/',\n\t\t\t\tcustom: this.options.templatesPosts\n\t\t\t})\n\t\t}\n\t}\n\n\tgetTemplatesByType = async ({ keys, path, custom }) => {\n\t\tconst templates = {}\n\n\t\tconst customTemplates = keys.filter(name => this.hasProperty(custom, name))\n\t\tcustomTemplates.forEach(name => {\n\t\t\ttemplates[name] = custom[name]\n\t\t})\n\t\tconst defaultTemplates = keys.filter(name => !this.hasProperty(custom, name))\n\n\t\tconst requestsDefaultTemplates = defaultTemplates.map(name => import(path + name))\n\n\t\tconst responses = await Promise.all(requestsDefaultTemplates)\n\n\t\tresponses.forEach((response, index) => {\n\t\t\ttemplates[defaultTemplates[index]] = response.default\n\t\t})\n\n\t\treturn templates\n\t}\n\n\t/**\n\t * Build the Tumblr API url\n\t *\n\t * @param {String||Boolean} id Post id\n\t * @param {Integer} offset Offset for the query\n\t * @param {Integer} limit Limit of results for the query\n\t * @param {String} tag Filter by a unique post tag\n\t *\n\t * @returns {String} API url for the request\n\t */\n\tgetAPIUrl ({\n\t\tid = false,\n\t\toffset = 0,\n\t\tlimit = this.options.limitData < this.nbPostPerRequest\n\t\t\t? this.options.limitData\n\t\t\t: this.nbPostPerRequest,\n\t\ttag = false\n\t} = {}) {\n\t\treturn `//api.tumblr.com/v2/blog/${this.options.host}/posts/?api_key=${\n\t\t\tthis.options.apiKey\n\t\t}&limit=${limit}&notes_info=false&offset=${offset}${tag ? `&tag=${tag}` : ''}${\n\t\t\tid ? `&id=${id}` : ''\n\t\t}`\n\t}\n\n\t/**\n\t * Get all datas from the API\n\t * Store datas in browser storage is option is enabled\n\t *\n\t * @returns {Object} Datas from the API\n\t */\n\tgetAllDatas = async e => {\n\t\tlet datas\n\n\t\tif (this.options.cache) {\n\t\t\tvar getDataFromCache = window[this.options.cacheMethod].getItem(this.browserStorageKey)\n\n\t\t\tif (getDataFromCache === null) {\n\t\t\t\tdatas = await this.getDataFromAPI()\n\n\t\t\t\twindow[this.options.cacheMethod].setItem(\n\t\t\t\t\tthis.browserStorageKey,\n\t\t\t\t\tJSON.stringify(datas)\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tdatas = JSON.parse(window[this.options.cacheMethod].getItem(this.browserStorageKey))\n\t\t\t}\n\t\t} else {\n\t\t\tdatas = await this.getDataFromAPI()\n\t\t\twindow[this.options.cacheMethod].removeItem(this.browserStorageKey)\n\t\t}\n\n\t\treturn datas\n\t}\n\n\t/**\n\t * Get datas from the API\n\t *\n\t * @returns {Object} Datas from the API\n\t */\n\tgetDataFromAPI = async () => {\n\t\t// Trigger the first request to get infos about totalPosts and calculate next requests\n\t\tconst datasFirstRequest = await this.requestAPI(this.getAPIUrl())\n\n\t\tif (this.isValidResponse(datasFirstRequest)) {\n\t\t\tconst totalPosts = datasFirstRequest.response.total_posts\n\t\t\tconst nbLoop = this.getNumberOfRequest(totalPosts)\n\t\t\tlet posts = datasFirstRequest.response.posts\n\n\t\t\tif (datasFirstRequest.response.posts.length && nbLoop) {\n\t\t\t\tconst requests = []\n\n\t\t\t\t// Do multiple loop according to nbLoop and options.limitData\n\t\t\t\tfor (var i = 0; i < nbLoop; i++) {\n\t\t\t\t\trequests.push(\n\t\t\t\t\t\tthis.requestAPI(\n\t\t\t\t\t\t\tthis.getAPIUrl({\n\t\t\t\t\t\t\t\toffset: this.nbPostPerRequest + this.nbPostPerRequest * i\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\tawait Promise.all(requests).then(responses => {\n\t\t\t\t\tresponses.forEach(response => {\n\t\t\t\t\t\tposts = posts.concat(response.response.posts)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn { totalPosts, posts }\n\t\t} else {\n\t\t\t// If the request failed, return empty results to prevent break the application\n\t\t\treturn { totalPosts: 0, posts: [] }\n\t\t}\n\t}\n\n\t/**\n\t * Get number of requests necessary to reach options.limitDatas\n\t * without the first request datas\n\t *\n\t * @param {*} totalPosts Total of posts from the API\n\t *\n\t * @returns {Integer} Number of request to reach options.limitDatas\n\t */\n\tgetNumberOfRequest (totalPosts) {\n\t\treturn totalPosts <= this.options.limitData\n\t\t\t? Math.ceil((totalPosts - this.nbPostPerRequest) / this.nbPostPerRequest)\n\t\t\t: Math.ceil((this.options.limitData - this.nbPostPerRequest) / this.nbPostPerRequest)\n\t}\n\n\t/**\n\t * Get datas for the homepage (first page only)\n\t * Datas are available in the class property\n\t *\n\t * @returns {Object} Posts datas for the homepage\n\t */\n\tgetDatasForHomePage () {\n\t\tconst maxPosts =\n\t\t\tthis.datas.totalPosts < this.options.elementsPerPage\n\t\t\t\t? this.datas.totalPosts\n\t\t\t\t: this.options.elementsPerPage\n\n\t\treturn this.datas.posts.slice(0, maxPosts)\n\t}\n\n\t/**\n\t * Get datas for the tagged page\n\t * Request the API to get posts\n\t *\n\t * @param {String} tag Tag to filter posts\n\t *\n\t * @returns {Object} Posts datas for the tagged page filter by tag\n\t */\n\tgetDatasForTaggedPage = async tag => {\n\t\tconst datas = await this.requestAPI(\n\t\t\tthis.getAPIUrl({\n\t\t\t\ttag: tag\n\t\t\t})\n\t\t)\n\n\t\treturn datas && datas.response ? datas.response.posts : []\n\t}\n\n\t/**\n\t * Get datas for the post page\n\t * Request the API to get posts\n\t *\n\t * @param {String} id Id of the current post\n\t *\n\t * @returns {Object} Posts datas for the post page filter by post id\n\t */\n\tgetDatasForPostPage = async id => {\n\t\tconst datas = await this.requestAPI(\n\t\t\tthis.getAPIUrl({\n\t\t\t\tid: id\n\t\t\t})\n\t\t)\n\n\t\treturn datas && datas.response ? datas.response.posts : []\n\t}\n\n\t/**\n\t * Get datas by page number, use by the infinite scroll\n\t * Request the local datas in priority\n\t * If no datas are available, request the API to get posts\n\t *\n\t * @param {Integer} pageNumber Page number\n\t *\n\t * @returns {Object} Posts datas for the homepage filter by page number\n\t */\n\tgetPostsByPageNumber = async pageNumber => {\n\t\tconst range = this.getRange(pageNumber)\n\t\tconst datas = this.extractDatasFromLocalDatas(range)\n\n\t\tif (datas.length) {\n\t\t\treturn datas\n\t\t} else {\n\t\t\tconst datas = await this.requestAPI(\n\t\t\t\tthis.getAPIUrl({\n\t\t\t\t\toffset: range.start,\n\t\t\t\t\tlimit: this.options.elementsPerPage\n\t\t\t\t})\n\t\t\t)\n\t\t\treturn datas.response.posts\n\t\t}\n\t}\n\n\t/**\n\t * Get the type of the current page according to the hash\n\t *\n\t * @returns {String} Page type (tagged, post, home)\n\t */\n\tgetPageType () {\n\t\tconst hash = this.getRoute()\n\n\t\tif (hash.indexOf('/tagged/') !== -1) {\n\t\t\treturn 'tagged'\n\t\t} else if (hash.indexOf('/post/') !== -1) {\n\t\t\treturn 'post'\n\t\t} else {\n\t\t\treturn 'home'\n\t\t}\n\t}\n\n\t/**\n\t * Get range index (start, end) to extract posts from local datas\n\t * according to the current page position and elements per page\n\t *\n\t * @param {Integer} pageNumber Pagz number\n\t *\n\t * @returns {Object} Start and end index for the range\n\t */\n\tgetRange (pageNumber) {\n\t\tconst previousPage = pageNumber > 1 ? pageNumber - 1 : pageNumber\n\t\treturn {\n\t\t\tstart: previousPage * this.options.elementsPerPage,\n\t\t\tend: pageNumber * this.options.elementsPerPage - 1\n\t\t}\n\t}\n\n\t/**\n\t * Get tag from the hash\n\t *\n\t * @returns {String} Current tag\n\t */\n\tgetHashTag () {\n\t\treturn this.getRoute().split('/tagged/')[1]\n\t}\n\n\t/**\n\t * Get post id from the hash\n\t *\n\t * @returns {String} Current post id\n\t */\n\tgetHashPostId () {\n\t\treturn this.getRoute().split('/post/')[1]\n\t}\n\n\t/**\n\t * Get the current route (hash)\n\t *\n\t * @returns {String} Current hash\n\t */\n\tgetRoute () {\n\t\treturn window.location.hash.substr(1)\n\t}\n\n\t// Get a related posts\n\t/**\n\t * Get related posts\n\t *\n\t * @param {String} postId Pot id\n\t * @param {Integer} limit Limit of related posts results\n\t * @param {Array} tags Tags list of the current post\n\t * @param {Array} ignoreTags Ignore specific list of tags\n\t *\n\t * @returns {Array} List of related posts associated to the current post\n\t */\n\tgetRelatedPosts ({ postId, limit = 3, tags = [], ignoreTags = [] }) {\n\t\t// Get all tags from current post without ignore tags\n\t\tconst tagsSource = tags.filter(tag => !ignoreTags.includes(tag))\n\n\t\t// Get related posts\n\t\tconst relatedPosts = this.datas.posts.filter(post =>\n\t\t\tpost.tags.some(tag => tagsSource.includes(tag) && post.id_string !== postId)\n\t\t)\n\n\t\t// Get random keys\n\t\tconst randomKeys = getRandoms(limit, 0, relatedPosts.length - 1) || []\n\n\t\tif (relatedPosts.length < limit) {\n\t\t\treturn relatedPosts\n\t\t} else {\n\t\t\t// Extract random related posts\n\t\t\treturn randomKeys.map(key => relatedPosts[key])\n\t\t}\n\t}\n\n\t/**\n\t * Get all tags from local datas\n\t * Tags are sorted alphabetical\n\t * Tags are search only from local datas according to options.limitData posts\n\t *\n\t * @returns {Array} List of tags\n\t */\n\tgetAllTags () {\n\t\treturn this.jsonComplete\n\t\t\t? this.datas.posts\n\t\t\t\t.filter(post => post.tags.length)\n\t\t\t\t.flatMap(post => post.tags)\n\t\t\t\t.map(tag => tag.toLowerCase())\n\t\t\t\t.filter((elem, pos, arr) => {\n\t\t\t\t\treturn arr.indexOf(elem) === pos\n\t\t\t\t})\n\t\t\t\t.sort()\n\t\t\t: []\n\t}\n\n\t/**\n\t * Custom hasOwnProperty to prevent security issue (ESLint no-prototype-builtins)\n\t *\n\t * @param {Object} objectSource Object source to search the key\n\t * @param {String} key The key to search inside the object\n\t *\n\t * @returns {Boolean} Is the key present inside the object\n\t */\n\thasProperty (objectSource, key) {\n\t\treturn Object.prototype.hasOwnProperty.call(objectSource, key)\n\t}\n}\n","/**\n * Get current scroll position\n *\n * @returns {Integer} Scroll position\n */\nexport function getScrollTop () {\n\treturn window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0\n}\n\n/**\n * Get a unique random number between min/max\n *\n * @param {*} numPicks Number of items to returns\n * @param {*} min Minimal value to start the random\n * @param {*} max Maximal value to end the random\n *\n * @returns {Array} Array of random numbers\n */\nexport function getRandoms (numPicks, min, max) {\n\tvar len = max - min + 1\n\tvar nums = new Array(len)\n\tvar selections = []\n\tvar i = 0\n\tvar j = 0\n\n\tif (min === 0) {\n\t\tif (numPicks > max + 1) numPicks = max\n\t} else {\n\t\tif (numPicks > max - min + 1) numPicks = max\n\t}\n\n\t// Initialize the array\n\tfor (i = 0; i < len; i++) {\n\t\tnums[i] = i + min\n\t}\n\n\t// Randomly pick one from the array\n\tfor (j = 0; j < numPicks; j++) {\n\t\tvar index = Math.floor(Math.random() * nums.length)\n\t\tselections.push(nums[index])\n\t\tnums.splice(index, 1)\n\t}\n\n\treturn selections\n}\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin"],"sourceRoot":""}